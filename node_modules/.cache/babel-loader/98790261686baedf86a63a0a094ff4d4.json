{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport validateDeprecatedOptions from '../utils/validateDeprecatedOptions';\nimport validateDeprecatedConfig from '../utils/validateDeprecatedConfig';\nimport StackViewBase from '../vendor/views/Stack/StackView';\nexport default function StackView({\n  navigation,\n  descriptors: originalDescriptors,\n  navigationConfig,\n  ...rest\n}) {\n  const descriptors = Object.keys(originalDescriptors).reduce((acc, key) => {\n    const options = validateDeprecatedConfig(navigationConfig, validateDeprecatedOptions(originalDescriptors[key].options));\n    acc[key] = { ...originalDescriptors[key],\n      options\n    };\n    return acc;\n  }, {});\n  return /*#__PURE__*/React.createElement(StackViewBase, _extends({\n    state: navigation.state,\n    descriptors: descriptors,\n    navigation: navigation\n  }, navigationConfig, rest));\n}","map":{"version":3,"sources":["StackView.tsx"],"names":["descriptors","rest","options","validateDeprecatedConfig","validateDeprecatedOptions","originalDescriptors","acc","navigation"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;AACA,OAAA,yBAAA,MAAA,oCAAA;AACA,OAAA,wBAAA,MAAA,mCAAA;AACA,OAAA,aAAA,MAAA,iCAAA;AAcA,eAAe,SAAA,SAAA,CAAmB;AAAA,EAAA,UAAA;AAEhCA,EAAAA,WAAW,EAFqB,mBAAA;AAAA,EAAA,gBAAA;AAIhC,KAAGC;AAJ6B,CAAnB,EAKL;AACR,QAAMD,WAAW,GAAG,MAAM,CAAN,IAAA,CAAA,mBAAA,EAAA,MAAA,CAElB,CAAA,GAAA,EAAA,GAAA,KAAc;AACd,UAAME,OAAO,GAAGC,wBAAwB,CAAA,gBAAA,EAEtCC,yBAAyB,CAACC,mBAAmB,CAAnBA,GAAmB,CAAnBA,CAF5B,OAE2B,CAFa,CAAxC;AAKAC,IAAAA,GAAG,CAAHA,GAAG,CAAHA,GAAW,EACT,GAAGD,mBAAmB,CADb,GACa,CADb;AAETH,MAAAA;AAFS,KAAXI;AAKA,WAAA,GAAA;AAbkB,GAAA,EAApB,EAAoB,CAApB;AAgBA,SAAA,aACE,KAAA,CAAA,aAAA,CAAA,aAAA,EAAA,QAAA,CAAA;AACE,IAAA,KAAK,EAAEC,UAAU,CADnB,KAAA;AAEE,IAAA,WAAW,EAFb,WAAA;AAGE,IAAA,UAAU,EAAEA;AAHd,GAAA,EAAA,gBAAA,EADF,IACE,CAAA,CADF;AASD","sourcesContent":["import * as React from 'react';\nimport validateDeprecatedOptions from '../utils/validateDeprecatedOptions';\nimport validateDeprecatedConfig from '../utils/validateDeprecatedConfig';\nimport StackViewBase from '../vendor/views/Stack/StackView';\nimport type {\n  StackNavigationHelpers,\n  StackNavigationConfig,\n  StackDescriptorMap,\n} from '../vendor/types';\n\ntype Props = {\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n  navigationConfig: StackNavigationConfig;\n  screenProps: unknown;\n};\n\nexport default function StackView({\n  navigation,\n  descriptors: originalDescriptors,\n  navigationConfig,\n  ...rest\n}: Props) {\n  const descriptors = Object.keys(originalDescriptors).reduce<\n    StackDescriptorMap\n  >((acc, key) => {\n    const options = validateDeprecatedConfig(\n      navigationConfig,\n      validateDeprecatedOptions(originalDescriptors[key].options)\n    );\n\n    acc[key] = {\n      ...originalDescriptors[key],\n      options,\n    };\n\n    return acc;\n  }, {});\n\n  return (\n    <StackViewBase\n      state={navigation.state}\n      descriptors={descriptors}\n      navigation={navigation}\n      {...navigationConfig}\n      {...rest}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}